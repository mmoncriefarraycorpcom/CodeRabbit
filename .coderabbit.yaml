# CodeRabbit AI Pilot Program Configuration
# Repository: https://github.com/mmoncriefarraycorpcom/CodeRabbit.git
# Purpose: Testing and evaluation of CodeRabbit AI for code reviews

# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json

language: "en-US"
early_access: false

# Pilot-specific tone instructions
tone_instructions: "CodeRabbit pilot evaluation. Provide thorough, constructive feedback focusing on code quality, security, performance, and maintainability. Be detailed to demonstrate AI capabilities."

reviews:
  profile: "assertive"  # More comprehensive reviews for pilot evaluation
  request_changes_workflow: false  # Don't block merges during pilot
  high_level_summary: true
  poem: false  # Keep it professional for enterprise evaluation
  review_status: true
  collapse_walkthrough: false
  auto_review:
    enabled: true
    drafts: false
  
  # Path-specific instructions for different types of code
  path_instructions:
    - path: "**/*.cs"
      instructions: |
        Review C# code focusing on:
        - SOLID principles and design patterns
        - Exception handling and logging
        - Async/await patterns and thread safety
        - Memory management and performance
        - Security best practices (input validation, SQL injection prevention)
        - Unit test coverage and testability
        - API design and documentation
        
    - path: "**/*.js"
      instructions: |
        Review JavaScript code for:
        - Modern ES6+ syntax and patterns
        - Error handling and validation
        - Performance considerations
        - Security issues (XSS, CSRF prevention)
        - Code organization and modularity
        - Browser compatibility considerations
        
    - path: "**/*.ts"
      instructions: |
        Review TypeScript code for:
        - Type safety and proper type definitions
        - Interface design and implementation
        - Generic usage and constraints
        - Modern TypeScript features
        - Integration with frameworks (Angular, React, etc.)
        
    - path: "**/*.py"
      instructions: |
        Review Python code for:
        - PEP 8 compliance and code style
        - Exception handling and logging
        - Performance optimizations
        - Security best practices
        - Documentation and type hints
        - Testing patterns and coverage
        
    - path: "**/tests/**"
      instructions: |
        Review test code for:
        - Test coverage and completeness
        - Test clarity and maintainability
        - Proper use of mocks and stubs
        - Test isolation and independence
        - Performance test considerations
        - Edge case coverage
        
    - path: "**/*.json"
      instructions: |
        Review JSON files for:
        - Schema validation
        - Security considerations (no sensitive data)
        - Configuration best practices
        - Documentation of structure
        
    - path: "**/*.yml"
      instructions: |
        Review YAML files for:
        - Syntax correctness
        - Security configurations
        - Environment-specific settings
        - Documentation and comments
        
    - path: "docs/**"
      instructions: |
        Review documentation for:
        - Clarity and completeness
        - Technical accuracy
        - Proper formatting
        - Examples and usage instructions
        - Maintenance and update requirements

  # Ignore generated files and build artifacts
  path_filters:
    - "!**/node_modules/**"
    - "!**/bin/**"
    - "!**/obj/**"
    - "!**/*.min.js"
    - "!**/*.generated.*"
    - "!**/coverage/**"
    - "!**/.git/**"
    - "!**/build/**"
    - "!**/dist/**"

chat:
  auto_reply: true 